# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/apps/moldft/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/madness
pkgincludedir = $(includedir)/madness
pkglibdir = $(libdir)/madness
pkglibexecdir = $(libexecdir)/madness
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/config/MakeGlobal.am
bin_PROGRAMS = testpg$(EXEEXT) moldft$(EXEEXT) mcpfit$(EXEEXT) \
	testperiodic$(EXEEXT) testxc$(EXEEXT)

#polar_SOURCES  = polar.cc lda.cc  molecule.cc \
#                 molecule.h molecularbasis.h molecularbasis.cc \
#                 atomutil.h atomutil.cc \
#                 corepotential.h corepotential.cc \
#                 xcfunctional.h xcfunctional_ldaonly.cc 
am__append_1 = xcfunctional_libxc.cc
am__append_2 = xcfunctional_libxc.cc
am__append_3 = xcfunctional_libxc.cc
#am__append_4 = xcfunctional_ldaonly.cc lda.cc
subdir = src/apps/moldft
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/config/acx_check_compiler_flags.m4 \
	$(top_srcdir)/config/acx_check_tls.m4 \
	$(top_srcdir)/config/acx_check_tr1.m4 \
	$(top_srcdir)/config/acx_crayxe.m4 \
	$(top_srcdir)/config/acx_crayxt.m4 \
	$(top_srcdir)/config/acx_detect_cxx.m4 \
	$(top_srcdir)/config/acx_enable_cpp0xtr1.m4 \
	$(top_srcdir)/config/acx_enable_debugging.m4 \
	$(top_srcdir)/config/acx_enable_optimal.m4 \
	$(top_srcdir)/config/acx_enable_optimization.m4 \
	$(top_srcdir)/config/acx_enable_warn.m4 \
	$(top_srcdir)/config/acx_fortran_symbols.m4 \
	$(top_srcdir)/config/acx_ibmbgp.m4 \
	$(top_srcdir)/config/acx_ibmbgq.m4 \
	$(top_srcdir)/config/acx_mac.m4 \
	$(top_srcdir)/config/acx_mpi.m4 \
	$(top_srcdir)/config/acx_posix_memalign.m4 \
	$(top_srcdir)/config/acx_std_abs.m4 \
	$(top_srcdir)/config/acx_unqal_stat_decl.m4 \
	$(top_srcdir)/config/acx_with_boost.m4 \
	$(top_srcdir)/config/acx_with_eigen3.m4 \
	$(top_srcdir)/config/acx_with_google_perf.m4 \
	$(top_srcdir)/config/acx_with_google_test.m4 \
	$(top_srcdir)/config/acx_with_libunwind.m4 \
	$(top_srcdir)/config/acx_with_libxc.m4 \
	$(top_srcdir)/config/acx_with_stubmpi.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/madness_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_mcpfit_OBJECTS = mcpfit.$(OBJEXT) atomutil.$(OBJEXT) \
	corepotential.$(OBJEXT)
mcpfit_OBJECTS = $(am_mcpfit_OBJECTS)
mcpfit_LDADD = $(LDADD)
#mcpfit_DEPENDENCIES = $(MRALIBS)
mcpfit_DEPENDENCIES = $(MRALIBS)
am__moldft_SOURCES_DIST = moldft.cc lda.cc molecule.cc molecule.h \
	molecularbasis.h molecularbasis.cc atomutil.h atomutil.cc \
	corepotential.h corepotential.cc xcfunctional.h \
	xcfunctional_ldaonly.cc xcfunctional_libxc.cc
am__objects_1 = xcfunctional_libxc.$(OBJEXT)
am_moldft_OBJECTS = moldft.$(OBJEXT) lda.$(OBJEXT) molecule.$(OBJEXT) \
	molecularbasis.$(OBJEXT) atomutil.$(OBJEXT) \
	corepotential.$(OBJEXT) xcfunctional_ldaonly.$(OBJEXT) \
	$(am__objects_1)
moldft_OBJECTS = $(am_moldft_OBJECTS)
moldft_LDADD = $(LDADD)
#moldft_DEPENDENCIES = $(MRALIBS)
moldft_DEPENDENCIES = $(MRALIBS)
am__testperiodic_SOURCES_DIST = testperiodic.cc lda.cc molecule.cc \
	molecule.h molecularbasis.h molecularbasis.cc atomutil.h \
	atomutil.cc corepotential.h corepotential.cc xcfunctional.h \
	xcfunctional_ldaonly.cc xcfunctional_libxc.cc
am_testperiodic_OBJECTS = testperiodic.$(OBJEXT) lda.$(OBJEXT) \
	molecule.$(OBJEXT) molecularbasis.$(OBJEXT) atomutil.$(OBJEXT) \
	corepotential.$(OBJEXT) xcfunctional_ldaonly.$(OBJEXT) \
	$(am__objects_1)
testperiodic_OBJECTS = $(am_testperiodic_OBJECTS)
testperiodic_LDADD = $(LDADD)
#testperiodic_DEPENDENCIES = $(MRALIBS)
testperiodic_DEPENDENCIES = $(MRALIBS)
am_testpg_OBJECTS = testpg.$(OBJEXT)
testpg_OBJECTS = $(am_testpg_OBJECTS)
testpg_LDADD = $(LDADD)
#testpg_DEPENDENCIES = $(MRALIBS)
testpg_DEPENDENCIES = $(MRALIBS)
am__testxc_SOURCES_DIST = testxc.cc xcfunctional.h \
	xcfunctional_libxc.cc xcfunctional_ldaonly.cc lda.cc
#am__objects_2 = xcfunctional_ldaonly.$(OBJEXT) \
#	lda.$(OBJEXT)
am_testxc_OBJECTS = testxc.$(OBJEXT) $(am__objects_1) $(am__objects_2)
testxc_OBJECTS = $(am_testxc_OBJECTS)
testxc_LDADD = $(LDADD)
#testxc_DEPENDENCIES = $(MRALIBS)
testxc_DEPENDENCIES = $(MRALIBS)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(mcpfit_SOURCES) $(moldft_SOURCES) $(testperiodic_SOURCES) \
	$(testpg_SOURCES) $(testxc_SOURCES)
DIST_SOURCES = $(mcpfit_SOURCES) $(am__moldft_SOURCES_DIST) \
	$(am__testperiodic_SOURCES_DIST) $(testpg_SOURCES) \
	$(am__testxc_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /sandbox/vama/soft/chem/m-a-d-n-e-s-s/trunk/config/missing --run aclocal-1.11
AMTAR = ${SHELL} /sandbox/vama/soft/chem/m-a-d-n-e-s-s/trunk/config/missing --run tar
AUTOCONF = ${SHELL} /sandbox/vama/soft/chem/m-a-d-n-e-s-s/trunk/config/missing --run autoconf
AUTOHEADER = ${SHELL} /sandbox/vama/soft/chem/m-a-d-n-e-s-s/trunk/config/missing --run autoheader
AUTOMAKE = ${SHELL} /sandbox/vama/soft/chem/m-a-d-n-e-s-s/trunk/config/missing --run automake-1.11
AWK = gawk
CC = mpicc
CCAS = mpicc
CCASDEPMODE = depmode=gcc3
CCASFLAGS =  -O3 -Wall -Wno-strict-aliasing -Wno-deprecated
CCDEPMODE = depmode=gcc3
CFLAGS =  -O3 -Wall -Wno-strict-aliasing -Wno-deprecated
CPP = mpicc -E
CPPFLAGS = -I/homes/vama/install/include 
CXX = mpic++
CXXCPP = mpic++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -O3 -Wall -Wno-strict-aliasing -Wno-deprecated  -ffast-math -std=c++0x -march=native
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOT = /usr/bin/dot
DOXYGEN = /usr/bin/doxygen
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = mpif77
FFLAGS = -g -O2
GDB = gdb
GREP = /bin/grep
GTEST_CPPFLAGS = 
GTEST_CXXFLAGS = 
GTEST_LDFLAGS = 
GTEST_LIBS = 
HAVE_DOT = YES
HAVE_DOXYGEN = YES
HAVE_LATEX = YES
HAVE_PDFLATEX = YES
HAVE_SED = YES
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LATEX = /usr/bin/latex
LDFLAGS = 
LIBOBJS = 
LIBS = -lxc -L/usr/lib64 -lblas -llapack -lgfortran -L/homes/vama/install/lib
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /sandbox/vama/soft/chem/m-a-d-n-e-s-s/trunk/config/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MPICC = mpicc
MPICXX = mpic++
OBJEXT = o
PACKAGE = madness
PACKAGE_BUGREPORT = http://code.google.com/p/m-a-d-n-e-s-s
PACKAGE_NAME = madness
PACKAGE_STRING = madness 0.9
PACKAGE_TARNAME = madness
PACKAGE_URL = 
PACKAGE_VERSION = 0.9
PATH_SEPARATOR = :
PDFLATEX = /usr/bin/pdflatex
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.9
XTERM = xterm
abs_builddir = /sandbox/vama/soft/chem/m-a-d-n-e-s-s/trunk/src/apps/moldft
abs_srcdir = /sandbox/vama/soft/chem/m-a-d-n-e-s-s/trunk/src/apps/moldft
abs_top_builddir = /sandbox/vama/soft/chem/m-a-d-n-e-s-s/trunk
abs_top_srcdir = /sandbox/vama/soft/chem/m-a-d-n-e-s-s/trunk
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_F77 = mpif77
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /sandbox/vama/soft/chem/m-a-d-n-e-s-s/trunk/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..

# Define paths for includes (note convention #include <dir/file.h>)
AM_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/src/lib  -I$(top_srcdir)/src/apps -I$(top_builddir)/include

# Define directories holding libraries and variables for corresponding libraries
LIBWORLDDIR = $(top_builddir)/src/lib/world
LIBTENSORDIR = $(top_builddir)/src/lib/tensor
LIBLINALGDIR = $(top_builddir)/src/lib/linalg
LIBMISCDIR = $(top_builddir)/src/lib/misc
LIBMRADIR = $(top_builddir)/src/lib/mra
LIBTINYXMLDIR = $(top_builddir)/src/lib/tinyxml
LIBMUPARSERDIR = $(top_builddir)/src/lib/muParser
LIBWORLD = $(LIBWORLDDIR)/libMADworld.a
LIBTENSOR = $(LIBTENSORDIR)/libMADtensor.a
LIBLINALG = $(LIBLINALGDIR)/libMADlinalg.a
LIBMISC = $(LIBMISCDIR)/libMADmisc.a
LIBMRA = $(LIBMRADIR)/libMADmra.a
LIBTINYXML = $(LIBTINYXMLDIR)/libMADtinyxml.a
LIBMUPARSER = $(LIBMUPARSERDIR)/libMADmuparser.a

# Most scientific/numeric applications will link against these libraries
MRALIBS = $(LIBMRA) $(LIBLINALG) $(LIBTENSOR) $(LIBMISC) $(LIBMUPARSER) $(LIBTINYXML) $(LIBWORLD) 
#LDADD = $(MRALIBS)
LDADD = $(MRALIBS) -lxc
moldft_SOURCES = moldft.cc lda.cc molecule.cc molecule.h \
	molecularbasis.h molecularbasis.cc atomutil.h atomutil.cc \
	corepotential.h corepotential.cc xcfunctional.h \
	xcfunctional_ldaonly.cc $(am__append_1)
testpg_SOURCES = testpg.cc pointgroup.h
testperiodic_SOURCES = testperiodic.cc lda.cc molecule.cc molecule.h \
	molecularbasis.h molecularbasis.cc atomutil.h atomutil.cc \
	corepotential.h corepotential.cc xcfunctional.h \
	xcfunctional_ldaonly.cc $(am__append_2)
mcpfit_SOURCES = mcpfit.cc atomutil.h atomutil.cc corepotential.h corepotential.cc
testxc_SOURCES = testxc.cc xcfunctional.h $(am__append_3) \
	$(am__append_4)
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/MakeGlobal.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/apps/moldft/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/apps/moldft/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
mcpfit$(EXEEXT): $(mcpfit_OBJECTS) $(mcpfit_DEPENDENCIES) 
	@rm -f mcpfit$(EXEEXT)
	$(CXXLINK) $(mcpfit_OBJECTS) $(mcpfit_LDADD) $(LIBS)
moldft$(EXEEXT): $(moldft_OBJECTS) $(moldft_DEPENDENCIES) 
	@rm -f moldft$(EXEEXT)
	$(CXXLINK) $(moldft_OBJECTS) $(moldft_LDADD) $(LIBS)
testperiodic$(EXEEXT): $(testperiodic_OBJECTS) $(testperiodic_DEPENDENCIES) 
	@rm -f testperiodic$(EXEEXT)
	$(CXXLINK) $(testperiodic_OBJECTS) $(testperiodic_LDADD) $(LIBS)
testpg$(EXEEXT): $(testpg_OBJECTS) $(testpg_DEPENDENCIES) 
	@rm -f testpg$(EXEEXT)
	$(CXXLINK) $(testpg_OBJECTS) $(testpg_LDADD) $(LIBS)
testxc$(EXEEXT): $(testxc_OBJECTS) $(testxc_DEPENDENCIES) 
	@rm -f testxc$(EXEEXT)
	$(CXXLINK) $(testxc_OBJECTS) $(testxc_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/atomutil.Po
include ./$(DEPDIR)/corepotential.Po
include ./$(DEPDIR)/lda.Po
include ./$(DEPDIR)/mcpfit.Po
include ./$(DEPDIR)/moldft.Po
include ./$(DEPDIR)/molecularbasis.Po
include ./$(DEPDIR)/molecule.Po
include ./$(DEPDIR)/testperiodic.Po
include ./$(DEPDIR)/testpg.Po
include ./$(DEPDIR)/testxc.Po
include ./$(DEPDIR)/xcfunctional_ldaonly.Po
include ./$(DEPDIR)/xcfunctional_libxc.Po

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
