#ifndef HARTREEFOCK_H_
#define HARTREEFOCK_H_

#include <mra/mra.h>

namespace madness
{
  
  //*****************************************************************************
  // TYPEDEFS
  typedef SharedPtr< FunctionFunctorInterface<double,3> > functorT;
  //*****************************************************************************
  
  //***************************************************************************
  class HartreeFock
  {
  public:
  
    //*************************************************************************
    // Default constructor
    HartreeFock();
    //*************************************************************************
  
    //*************************************************************************
    // Constructor
    HartreeFock(functorT V);
    //*************************************************************************
  
    //*************************************************************************
    // Destructor
  	virtual ~HartreeFock();
    //*************************************************************************
  
    //*************************************************************************
  	void hartree_fock();
    //*************************************************************************
  
    //*************************************************************************
    void calculate_coulomb();
    //*************************************************************************

    //*************************************************************************
    void calculate_exchange();
    //*************************************************************************

  private:
    
    //*************************************************************************
    // One body potential
    functorT _V;
    //*************************************************************************
    
  };
  //***************************************************************************

}

#endif /*HARTREEFOCK_H_*/
