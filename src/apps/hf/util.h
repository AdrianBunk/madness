
#include <mra/mra.h>
#include <world/world.h>
#include <vector>

namespace madness
{
  class OnesFunctor :
  public FunctionFunctorInterface<double,3>
  {
  private:
  
  public:
    //*************************************************************************
    OnesFunctor()
    {
    }
    //*************************************************************************
  
    //*************************************************************************
    virtual ~OnesFunctor() {}
    //*************************************************************************
  
    //*************************************************************************
    double operator()(const coordT& x) const
    {
      return 1.0;
    }
    //*************************************************************************
  };

  //***************************************************************************
  class ZerosFunctor :
  public FunctionFunctorInterface<double,3>
  {
  private:
  
  public:
    //*************************************************************************
    ZerosFunctor()
    {
    }
    //*************************************************************************
  
    //*************************************************************************
    virtual ~ZerosFunctor() {}
    //*************************************************************************

    //*************************************************************************
    double operator()(const coordT& x) const
    {
      return 0.0;
    }
    //*************************************************************************
  };
  //***************************************************************************
}
