
#ifndef _madness_include_madnessconfig_h_
#define _madness_include_madnessconfig_h_

/* This file will be included into both C and C++ source */

/* The version numbers. */
#define MADNESS_VERSION "@MADNESS_VERSION@"
#define MADNESS_MAJOR_VERSION @MADNESS_MAJOR_VERSION@
#define MADNESS_MINOR_VERSION @MADNESS_MINOR_VERSION@

/* Info about the compilation platform */
#define MADNESS_CONFIGURATION_HOST "@MADNESS_CONFIGURATION_HOST@"
#define MADNESS_CONFIGURATION_DATE "@MADNESS_CONFIGURATION_DATE@"
#define MADNESS_CONFIGURATION_USER "@MADNESS_CONFIGURATION_USER@"
#define MADNESS_CONFIGURATION_CXX  "@MADNESS_CONFIGURATION_CXX@"
#define MADNESS_CONFIGURATION_CXXFLAGS  "@MADNESS_CONFIGURATION_CXXFLAGS@"

/* Restrict keyword */
#define RESTRICT @RESTRICT@

/* are unqualified static declarations considered? */
#if @HAVE_UNQUALIFIED_STATIC_DECL@
#  define HAVE_UNQUALIFIED_STATIC_DECL 
#endif

/* have nested template XLC bug? */
#if @HAVE_NESTED_TEMPLATE_XLC_BUG@
#  define HAVE_NESTED_TEMPLATE_XLC_BUG
#endif

/* have std::abs(long) ? */
#if @HAVE_STD_ABS_LONG@
#  define HAVE_STD_ABS_LONG
#endif

/* have std::labs? */
#if @HAVE_STD_LABS@
#  define HAVE_STD_LABS
#endif

/* Pthreads available */
#if @HAVE_PTHREADS@
#  define HAVE_PTHREADS
#endif

/* Configuration of tensor class */
#if @TENSOR_INSTANCE_COUNT@
#  define TENSOR_INSTANCE_COUNT
#endif

#if @BOUNDS_CHECKING@
#  define BOUNDS_CHECKING
#endif

/* xterm for debugging */
#if @HAVE_XTERM_DEBUG@
#  define HAVE_XTERM_DEBUG
#endif

/* BIG_ENDIAN or LITTLE_ENDIAN */
#define MADNESS_BYTE_ORDER @BYTE_ORDER@

/* What should madness assersions do? */
#define @MADNESS_ASSERTIONS@

/* Corresponding C type to Fortran integers */
#define MADNESS_FORINT @MADNESS_FORINT@

/* Type of hash_map underneath worlddc */
#if @WORLDDC_USES_TR1_UNORDERED_MAP@
#  define WORLDDC_USES_TR1_UNORDERED_MAP
#endif

/* If gathering new/delete statistics */
#if @WORLD_GATHER_MEM_STATS@
#  define WORLD_GATHER_MEM_STATS
#else
/* The instrumented new will align on 16 byte boundaries
   but if we are not using it then use posix_memalign */
#  define TENSORS_USE_POSIX_MEMALIGN 
#endif

/* Namespace containing hash_map  */
#define HASH_MAP_NAMESPACE @HASH_MAP_NAMESPACE@

/* Yield during busy spin */
#if @WORLD_SCHED_BACKOFF@
#  define WORLD_SCHED_BACKOFF
#endif

/* Symbols used to link Fortran from C ... lc, lcu, uc, ucu */
#define F77_SYMBOL @F77_SYMBOL@

/* X86 variations */
#if (@HOST_CPU@ == X86_32) 
#  define X86_32
#elif (@HOST_CPU@ == X86_64) 
#  define X86_64
#endif

/* Specification of host system */
#define HOST_SYSTEM @HOST_SYSTEM@

/* These for MTXMQ in tensor library */
#if @OPTERON_TUNE@
#  define OPTERON_TUNE
#endif

#if @CORE_DUO_TUNE@
#  define CORE_DUO_TUNE
#endif

#if @CORE2_TUNE@
#  define CORE2_TUNE
#endif

#if @USE_LINUX_RANDOM@
#  define USE_LINUX_RANDOM
#endif


/* Attempt at deadlock detection */
#if @WORLD_WATCHDOG@
#  define WORLD_WATCHDOG
#  define WATCHDOG_BARK_INTERVAL @WATCHDOG_BARK_INTERVAL@
#  define WATCHDOG_TIMEOUT @WATCHDOG_TIMEOUT@
#endif

/* Enable tracing using tau */
#if @WORLD_TAU_TRACE@
#  define WORLD_TAU_TRACE
#endif

#endif 
