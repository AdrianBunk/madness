We are back to using autoconf and standard GNU configure scripts.

Prequisites:

  o  MPI-2

  o  BLAS

  o  LAPACK

  o  C and C++ compilers

  o  If you are building from the respository you will also need
     autoconf and automake.

Optional:

  o  TCMalloc from google perftools ... its really fast.

Configure options:

  o  --with-papi ... enables use of PAPI for performance profiling (only tested on Cray-XT)

  o  --with-spinlocks ... enables spinlocks in some locations instead of pthread_mutex
     (automatically enabled on Cray-XT where it is faster.  On single socket Intel
      chips it seems slightly slower)

  o  --with-profile ... enables gathering of performances statistics

Configure environment variables:

  o  BIND ... specifies the default binding of threads to processors.
     It is a string containing three whitespace separated integers
     that indicate, in order, the processor for main thread, the
     message server thread, and the first processor for pool threads.
     Negative values imply no binding.  The usual default value is 
     "-1 -1 -1" which means no affinity.  On the Cray-XT the default
     value is "1 0 2" which places the main thread on core 1, the
     server thread on core 0 (least hypertransport hops from the NIC), 
     and pool threads on cores 2, 3, ....  


How to build:

If you checked the source out of subversion you will need to build the
".in" files from the autoconf and automake templates (you do not need
to do this if building from the distribution tar file).  In the top
source directory (the one with configure.ac) run

     autoreconf

Assuming you are not cross compiling and that mpicxx and mpicc (or
equivalent) are in your path, you only need to tell configure where to
find your BLAS and LAPACK libraries (including any libraries necessary
to link against those libraries).  Some examples follow.

  o  Linux workstation or cluster using GNU compilers
     (some systems might require additional libraries to resolve Fortran
      symbols used by LAPACK/BLAS)

     - 64-bit with Intel MKL installed.

       ./configure LIBS="-L/opt/intel/mkl/10.0.1.014/lib/em64t -lmkl -lguide -lpthread -lm"

     - 32-bit with Intel MKL installed

       ./configure LIBS="-L/opt/intel/mkl/10.0.1.014/lib/32 -lmkl -lguide -lpthread -lm"

     - 32 or 64 bit using system default BLAS and LAPACK
    
       ./configure LIBS="-llapack -lblas -lgfortran"

     - 64-bit with MKL, google's super-fast malloc and google's profiler library

      ./configure LIBS="-L/opt/intel/mkl/10.0.1.014/lib/em64t -L/usr/local/gperftools/lib -lmkl -lguide -lpthread -lm -ltcmalloc -lprofiler -lstdc++"

  o  madness.csm.ornl.gov

     - dream software development machine with 8 quad-core Barcelona (32 cores), 128 GB memory, 
       1 TB SSD for home, root, swap, and 2 TB HDD for scratch)

       export PATH=$HOME/bin:/usr/local/gcc-4.4.0-20090306/bin:/usr/local/mpich2-1.0.8-20090306/bin:$PATH
       export LD_LIBRARY_PATH=/usr/local/gcc-4.4.0-20090306/lib64:/usr/local/lib:/usr/local/acml4.2.0/gfortran64_int64/lib:/usr/local/gperftools/lib:/usr/local/mpich2-1.0.8-20090306/lib:/usr/local/libunwind-20090306/lib:$LD_LIBRARY_PATH
       ./configure LIBS="-L/usr/local/acml4.2.0/gfortran64_int64/lib -L/usr/local/gperftools-20090306/lib -L/usr/local/libunwind-20090306 -lacml  -lacml_mv -lprofiler -ltcmalloc -lunwind-x86_64 -lgfortran -lstdc++"



  o  Cray-XT (e.g., jaguar@ornl) 
     [Module commands assume you start from the default which is PGI and scilib]

     - with GNU compilers and ACML - RECOMMENDED

       This is recommended since the GNU compiler is about 10x faster at
       compiling and has comparable execution speed to PGI.  ACML is
       also faster than the Goto BLAS in scilib for the small matrices
       primarily used by MADNESS and does not have a huge piece of
       static memory reserved.
     
       module swap PrgEnv-pgi PrgEnv-gnu
       module load acml/4.1.0
       ./configure

     - with GNU compilers and scilib

       module swap PrgEnv-pgi PrgEnv-gnu
       ./configure


     - with PGI compilers and scilib

       ./configure

     - with PGI compilers and acml

       module load acml/4.1.0
       ./configure

  o  IBM BlueGene-P

     ?????

  o  Smoky, the eccentric AMD+IB cluster at ORNL used for development. 
     This using MVAPICH2, GNU and ACML (my install of ACML though there 
     should module available for it now)

     module swap PE-pgi PE-gnu
     module load PE-gnu/4.2.0
     module swap ompi mvapich2
     setenv LD_LIBRARY_PATH /ccs/home/harrison/smokyinstall/gfortran64_int64/lib:$LD_LIBRARY_PATH
     ./configure LIBS="-L/ccs/home/harrison/smokyinstall/gfortran64_int64/lib  -lacml  -lacml_mv -lgfortran"

  o  Macintosh Darwin --- tested with gcc 4.3.2, reference versions of BLAS and LAPACK, MPICH

     - with reference LAPACK and BLAS

     ./configure LIBS="-L/Users/harrison/install/lib -lLAPACK -lBLAS -lgfortran" CPPFLAGS="-I/Users/harrison/install/include"

     - using vecLib (comes standard on OS X)

     ./configure LIBS="/System/Library/Frameworks/vecLib.framework/vecLib" CPPFLAGS='-I/System/Library/Frameworks/vecLib.framework/Headers'



  



