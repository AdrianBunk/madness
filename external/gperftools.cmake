if(ENABLE_GPERFTOOLS)
  if(CMAKE_SYSTEM_NAME MATCHES "Linux")
    if(NOT LIBUNWIND_FOUND OR (LIBUNWIND_FOUND AND LIBUNWIND_VERION LESS 0.99))
      message(STATUS "Gperftools disabled because libunwind 0.99 or higher was not found") 
    endif()		     
  else()
    find_package(Gperftools)
  endif()

  if(GPERFTOOLS_FOUND)
    if(GPERFTOOLS_tcmalloc_minimal_FOUND AND NOT GPERFTOOLS_tcmalloc_FOUND)
      set(MADNESS_HAS_GOOGLE_PERF_MINIMAL 1)
    endif()
    ## Assuming that we will compile only with Clang, GNU, or Intel compilers
    set(NO_BUILTIN_MALLOC_FLAGS "-fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free")
    CHECK_C_COMPILER_FLAG(${NO_BUILTIN_MALLOC_FLAGS} REPLACE_BUILTIN_C_MALLOC)
    CHECK_CXX_COMPILER_FLAG(${NO_BUILTIN_MALLOC_FLAGS} REPLACE_BUILTIN_CXX_MALLOC)
    if(REPLACE_BUILTIN_C_MALLOC)
      append_flags(CMAKE_C_FLAGS "${NO_BUILTIN_MALLOC_FLAGS}")
    else()
      message(WARNING "Flags for suppressing builtin malloc/calloc/realloc/free could not be passed to the C compiler")
    endif()
    if(REPLACE_BUILTIN_CXX_MALLOC)
      append_flags(CMAKE_CXX_FLAGS "${NO_BUILTIN_MALLOC_FLAGS}")
    else()
      message(WARNING "Flags for suppresing builtin malloc/calloc/realloc/free could not be passed to the C++ compiler")
    endif()
  endif()
endif()